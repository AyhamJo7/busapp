{"ast":null,"code":"var _jsxFileName = \"D:\\\\SE1\\\\Aufgaben\\\\busapp\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [bookings, setBookings] = useState([]);\n  const [showBookings, setShowBookings] = useState(false);\n  const [loadingBookings, setLoadingBookings] = useState(false);\n  const [rides, setRides] = useState([]);\n  const [showRides, setShowRides] = useState(false);\n  const [loadingRides, setLoadingRides] = useState(false);\n  const [ships, setShips] = useState([]); // ðŸ†• Liste aller Schiffe\n  const [routes, setRoutes] = useState([]); // ðŸ†• Liste aller Routen\n\n  const [newRide, setNewRide] = useState({\n    routeId: \"\",\n    shipId: \"\",\n    departureTime: \"\",\n    arrivalTime: \"\"\n  });\n  const [addSuccess, setAddSuccess] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  useEffect(() => {\n    const role = localStorage.getItem(\"userRole\");\n    setUserRole(role); // z.â€¯B. ADMIN oder USER\n\n    // ðŸ†• Schiffe und Routen beim Laden holen\n    fetchAllShips();\n    fetchAllRoutes();\n    console.log(\"fetchAllRoutes()\", fetchAllRoutes()); // Debugging\n  }, []);\n\n  // ðŸ†• Alle Schiffe laden\n  const fetchAllShips = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/ships\");\n      if (response.ok) {\n        const data = await response.json();\n        setShips(data);\n      } else {\n        console.error(\"Fehler beim Laden der Schiffe:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Netzwerk-/Client-Fehler beim Laden der Schiffe:\", error);\n    }\n  };\n\n  // ðŸ†• Alle Routen laden\n  const fetchAllRoutes = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/routes\");\n      if (response.ok) {\n        const data = await response.json();\n        setRoutes(data);\n      } else {\n        console.error(\"Fehler beim Laden der Routen:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Netzwerk-/Client-Fehler beim Laden der Routen:\", error);\n    }\n  };\n\n  // Fahrt hinzufÃ¼gen\n  const handleAddRide = async e => {\n    e.preventDefault();\n    const payload = {\n      routeId: parseInt(newRide.routeId),\n      shipId: parseInt(newRide.shipId),\n      departureTime: newRide.departureTime + \":00\",\n      // Sekunden ergÃ¤nzen\n      arrivalTime: newRide.arrivalTime + \":00\"\n    };\n    console.log(\"Neuer Ride Payload:\", payload); // ðŸ‘ˆ Debuggen\n\n    try {\n      const response = await fetch(\"http://localhost:8080/api/rides\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        alert(\"Fahrt erfolgreich hinzugefÃ¼gt!\");\n        setAddSuccess(true);\n        setNewRide({\n          routeId: \"\",\n          shipId: \"\",\n          departureTime: \"\",\n          arrivalTime: \"\"\n        });\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        console.error(\"Backend-Fehler:\", response.status, errorData);\n        alert(`Fehler ${response.status}: ${errorData.message || \"Fahrt konnte nicht hinzugefÃ¼gt werden.\"}`);\n        setAddSuccess(false);\n      }\n    } catch (error) {\n      console.error(\"Netzwerk-/Client-Fehler:\", error);\n      alert(\"Netzwerkproblem oder Server nicht erreichbar.\");\n      setAddSuccess(false);\n    }\n  };\n\n  // Buchungen laden\n  const handleShowBookings = async () => {\n    setShowRides(false);\n    setShowBookings(true);\n    setLoadingBookings(true);\n    try {\n      const response = await fetch(\"http://localhost:8080/api/bookings\");\n      if (response.ok) {\n        const data = await response.json();\n        setBookings(data);\n      } else {\n        console.error(\"Fehler beim Laden der Buchungen:\", response.status);\n        setBookings([]);\n      }\n    } catch (error) {\n      console.error(\"Netzwerk-/Client-Fehler beim Laden der Buchungen:\", error);\n      setBookings([]);\n    }\n    setLoadingBookings(false);\n  };\n\n  // Fahrten laden\n  const handleShowRides = async () => {\n    setShowBookings(false);\n    setShowRides(true);\n    setLoadingRides(true);\n    try {\n      const response = await fetch(\"http://localhost:8080/api/rides\");\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Rides geladen:\", data);\n        setRides(data);\n      } else {\n        console.error(\"Fehler beim Laden der Rides:\", response.status);\n        setRides([]);\n      }\n    } catch (error) {\n      console.error(\"Netzwerk-/Client-Fehler beim Laden der Rides:\", error);\n      setRides([]);\n    }\n    setLoadingRides(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Willkommen im Dashboard!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShowBookings,\n      children: \"Meine Buchungen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShowRides,\n      children: \"Fahrt buchen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), showBookings && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Meine Buchungen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this), loadingBookings ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Lade Buchungen...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }, this) : bookings.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Keine Buchungen vorhanden.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: bookings.map(b => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [b.fahrtName, \" am \", b.datum]\n        }, b.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this), showRides && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Verf\\xFCgbare Fahrten\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this), loadingRides ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Lade Fahrten...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }, this) : rides.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Keine Fahrten verf\\xFCgbar.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: rides.map(r => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Fahrt #\", r.id, \": \", r.departureTime, \" \\u2192 \", r.arrivalTime]\n        }, r.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }, this), userRole === \"ADMIN\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Neue Fahrt hinzuf\\xFCgen (nur Admin)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddRide,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: newRide.routeId,\n          onChange: e => setNewRide({\n            ...newRide,\n            routeId: e.target.value\n          }),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Route w\\xE4hlen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: route.id,\n            children: [route.name, \" \"]\n          }, route.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newRide.shipId,\n          onChange: e => setNewRide({\n            ...newRide,\n            shipId: e.target.value\n          }),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Schiff w\\xE4hlen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), ships.map(ship => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: ship.id,\n            children: [ship.name, \" \"]\n          }, ship.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: newRide.departureTime,\n          onChange: e => setNewRide({\n            ...newRide,\n            departureTime: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: newRide.arrivalTime,\n          onChange: e => setNewRide({\n            ...newRide,\n            arrivalTime: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Hinzuf\\xFCgen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this), addSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Fahrt erfolgreich hinzugef\\xFCgt!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"BYjLmdLhqtjd1Ml1DYrDbcqAkt8=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","bookings","setBookings","showBookings","setShowBookings","loadingBookings","setLoadingBookings","rides","setRides","showRides","setShowRides","loadingRides","setLoadingRides","ships","setShips","routes","setRoutes","newRide","setNewRide","routeId","shipId","departureTime","arrivalTime","addSuccess","setAddSuccess","userRole","setUserRole","role","localStorage","getItem","fetchAllShips","fetchAllRoutes","console","log","response","fetch","ok","data","json","error","status","handleAddRide","e","preventDefault","payload","parseInt","method","headers","body","JSON","stringify","alert","errorData","catch","message","handleShowBookings","handleShowRides","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginTop","length","map","b","fahrtName","datum","id","r","onSubmit","value","onChange","target","required","route","name","ship","type","_c","$RefreshReg$"],"sources":["D:/SE1/Aufgaben/busapp/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Dashboard() {\r\n    const [bookings, setBookings] = useState([]);\r\n    const [showBookings, setShowBookings] = useState(false);\r\n    const [loadingBookings, setLoadingBookings] = useState(false);\r\n\r\n    const [rides, setRides] = useState([]);\r\n    const [showRides, setShowRides] = useState(false);\r\n    const [loadingRides, setLoadingRides] = useState(false);\r\n\r\n    const [ships, setShips] = useState([]); // ðŸ†• Liste aller Schiffe\r\n    const [routes, setRoutes] = useState([]); // ðŸ†• Liste aller Routen\r\n\r\n    const [newRide, setNewRide] = useState({ routeId: \"\", shipId: \"\", departureTime: \"\", arrivalTime: \"\" });\r\n    const [addSuccess, setAddSuccess] = useState(false);\r\n\r\n    const [userRole, setUserRole] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const role = localStorage.getItem(\"userRole\");\r\n        setUserRole(role); // z.â€¯B. ADMIN oder USER\r\n\r\n        // ðŸ†• Schiffe und Routen beim Laden holen\r\n        fetchAllShips();\r\n        fetchAllRoutes();\r\n        console.log(\"fetchAllRoutes()\", fetchAllRoutes()); // Debugging\r\n    }, []);\r\n\r\n    // ðŸ†• Alle Schiffe laden\r\n    const fetchAllShips = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/ships\");\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setShips(data);\r\n            } else {\r\n                console.error(\"Fehler beim Laden der Schiffe:\", response.status);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Netzwerk-/Client-Fehler beim Laden der Schiffe:\", error);\r\n        }\r\n    };\r\n\r\n    // ðŸ†• Alle Routen laden\r\n    const fetchAllRoutes = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/routes\");\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setRoutes(data);\r\n            } else {\r\n                console.error(\"Fehler beim Laden der Routen:\", response.status);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Netzwerk-/Client-Fehler beim Laden der Routen:\", error);\r\n        }\r\n    };\r\n\r\n    // Fahrt hinzufÃ¼gen\r\n    const handleAddRide = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const payload = {\r\n            routeId: parseInt(newRide.routeId),\r\n            shipId: parseInt(newRide.shipId),\r\n            departureTime: newRide.departureTime + \":00\", // Sekunden ergÃ¤nzen\r\n            arrivalTime: newRide.arrivalTime + \":00\",\r\n        };\r\n\r\n        console.log(\"Neuer Ride Payload:\", payload); // ðŸ‘ˆ Debuggen\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/rides\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(payload),\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert(\"Fahrt erfolgreich hinzugefÃ¼gt!\");\r\n                setAddSuccess(true);\r\n                setNewRide({ routeId: \"\", shipId: \"\", departureTime: \"\", arrivalTime: \"\" });\r\n            } else {\r\n                const errorData = await response.json().catch(() => ({}));\r\n                console.error(\"Backend-Fehler:\", response.status, errorData);\r\n                alert(`Fehler ${response.status}: ${errorData.message || \"Fahrt konnte nicht hinzugefÃ¼gt werden.\"}`);\r\n                setAddSuccess(false);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Netzwerk-/Client-Fehler:\", error);\r\n            alert(\"Netzwerkproblem oder Server nicht erreichbar.\");\r\n            setAddSuccess(false);\r\n        }\r\n    };\r\n\r\n    // Buchungen laden\r\n    const handleShowBookings = async () => {\r\n        setShowRides(false);\r\n        setShowBookings(true);\r\n        setLoadingBookings(true);\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/bookings\");\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setBookings(data);\r\n            } else {\r\n                console.error(\"Fehler beim Laden der Buchungen:\", response.status);\r\n                setBookings([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Netzwerk-/Client-Fehler beim Laden der Buchungen:\", error);\r\n            setBookings([]);\r\n        }\r\n        setLoadingBookings(false);\r\n    };\r\n\r\n    // Fahrten laden\r\n    const handleShowRides = async () => {\r\n        setShowBookings(false);\r\n        setShowRides(true);\r\n        setLoadingRides(true);\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/rides\");\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(\"Rides geladen:\", data);\r\n                setRides(data);\r\n            } else {\r\n                console.error(\"Fehler beim Laden der Rides:\", response.status);\r\n                setRides([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Netzwerk-/Client-Fehler beim Laden der Rides:\", error);\r\n            setRides([]);\r\n        }\r\n        setLoadingRides(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Willkommen im Dashboard!</h2>\r\n            <button onClick={handleShowBookings}>Meine Buchungen</button>\r\n            <button onClick={handleShowRides}>Fahrt buchen</button>\r\n\r\n            {showBookings && (\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <h3>Meine Buchungen</h3>\r\n                    {loadingBookings ? (\r\n                        <div>Lade Buchungen...</div>\r\n                    ) : bookings.length === 0 ? (\r\n                        <div>Keine Buchungen vorhanden.</div>\r\n                    ) : (\r\n                        <ul>\r\n                            {bookings.map(b => (\r\n                                <li key={b.id}>\r\n                                    {b.fahrtName} am {b.datum}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {showRides && (\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <h3>VerfÃ¼gbare Fahrten</h3>\r\n                    {loadingRides ? (\r\n                        <div>Lade Fahrten...</div>\r\n                    ) : rides.length === 0 ? (\r\n                        <div>Keine Fahrten verfÃ¼gbar.</div>\r\n                    ) : (\r\n                        <ul>\r\n                            {rides.map(r => (\r\n                                <li key={r.id}>\r\n                                    Fahrt #{r.id}: {r.departureTime} â†’ {r.arrivalTime}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {userRole === \"ADMIN\" && (\r\n                <div style={{ marginTop: \"30px\" }}>\r\n                    <h3>Neue Fahrt hinzufÃ¼gen (nur Admin)</h3>\r\n                    <form onSubmit={handleAddRide}>\r\n                        {/* Dynamische Route-Auswahl */}\r\n                        <select\r\n                            value={newRide.routeId}\r\n                            onChange={e => setNewRide({ ...newRide, routeId: e.target.value })}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Route wÃ¤hlen</option>\r\n                            {routes.map(route => (\r\n                                <option key={route.id} value={route.id}>\r\n                                    {route.name} {/* Oder route.description */}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n                        {/* Dynamische Schiff-Auswahl */}\r\n                        <select\r\n                            value={newRide.shipId}\r\n                            onChange={e => setNewRide({ ...newRide, shipId: e.target.value })}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Schiff wÃ¤hlen</option>\r\n                            {ships.map(ship => (\r\n                                <option key={ship.id} value={ship.id}>\r\n                                    {ship.name} {/* Oder ship.description */}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n                        {/* Abfahrtszeit */}\r\n                        <input\r\n                            type=\"datetime-local\"\r\n                            value={newRide.departureTime}\r\n                            onChange={e => setNewRide({ ...newRide, departureTime: e.target.value })}\r\n                            required\r\n                        />\r\n\r\n                        {/* Ankunftszeit */}\r\n                        <input\r\n                            type=\"datetime-local\"\r\n                            value={newRide.arrivalTime}\r\n                            onChange={e => setNewRide({ ...newRide, arrivalTime: e.target.value })}\r\n                            required\r\n                        />\r\n\r\n                        <button type=\"submit\">HinzufÃ¼gen</button>\r\n                    </form>\r\n\r\n                    {addSuccess && <div>Fahrt erfolgreich hinzugefÃ¼gt!</div>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}