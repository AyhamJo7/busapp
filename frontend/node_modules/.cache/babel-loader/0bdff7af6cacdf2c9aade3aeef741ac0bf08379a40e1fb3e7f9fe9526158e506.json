{"ast":null,"code":"var _jsxFileName = \"D:\\\\SE1\\\\Aufgaben\\\\busapp\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [bookings, setBookings] = useState([]);\n  const [showBookings, setShowBookings] = useState(false);\n  const [loadingBookings, setLoadingBookings] = useState(false);\n  const [rides, setRides] = useState([]);\n  const [showRides, setShowRides] = useState(false);\n  const [loadingRides, setLoadingRides] = useState(false);\n  const [ships, setShips] = useState([]); // 🆕 Liste aller Schiffe\n  const [routes, setRoutes] = useState([]); // 🆕 Liste aller Routen\n\n  const [newRide, setNewRide] = useState({\n    routeId: \"\",\n    shipId: \"\",\n    departureTime: \"\",\n    arrivalTime: \"\"\n  });\n  const [addSuccess, setAddSuccess] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  const [selectedRideId, setSelectedRideId] = useState(null);\n  useEffect(() => {\n    const role = localStorage.getItem(\"userRole\");\n    setUserRole(role); // z. B. ADMIN oder USER\n\n    // 🆕 Schiffe und Routen beim Laden holen\n    fetchAllShips();\n    fetchAllRoutes();\n  }, []);\n\n  // 🆕 Alle Schiffe laden\n  const fetchAllShips = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/ships\");\n      if (response.ok) {\n        const data = await response.json();\n        setShips(data);\n      } else {\n        console.error(\"Fehler beim Laden der Schiffe:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Netzwerk-/Client-Fehler beim Laden der Schiffe:\", error);\n    }\n  };\n\n  // 🆕 Alle Routen laden\n  const fetchAllRoutes = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/routes\");\n      console.log(\"fetchAllRoutes()\", response); // Debugging\n      if (response.ok) {\n        const data = await response.json();\n        setRoutes(data);\n      } else {\n        console.error(\"Fehler beim Laden der Routen:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Netzwerk-/Client-Fehler beim Laden der Routen:\", error);\n    }\n  };\n\n  // Fahrt hinzufügen\n  const handleAddRide = async e => {\n    e.preventDefault();\n    const payload = {\n      routeId: parseInt(newRide.routeId),\n      shipId: parseInt(newRide.shipId),\n      departureTime: newRide.departureTime + \":00\",\n      // Sekunden ergänzen\n      arrivalTime: newRide.arrivalTime + \":00\"\n    };\n    console.log(\"Neuer Ride Payload:\", payload); // 👈 Debuggen\n\n    try {\n      const response = await fetch(\"http://localhost:8080/api/rides\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        alert(\"Fahrt erfolgreich hinzugefügt!\");\n        setAddSuccess(true);\n        setNewRide({\n          routeId: \"\",\n          shipId: \"\",\n          departureTime: \"\",\n          arrivalTime: \"\"\n        });\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        console.error(\"Backend-Fehler:\", response.status, errorData);\n        alert(`Fehler ${response.status}: ${errorData.message || \"Fahrt konnte nicht hinzugefügt werden.\"}`);\n        setAddSuccess(false);\n      }\n    } catch (error) {\n      console.error(\"Netzwerk-/Client-Fehler:\", error);\n      alert(\"Netzwerkproblem oder Server nicht erreichbar.\");\n      setAddSuccess(false);\n    }\n  };\n\n  // Buchungen laden\n  const handleShowBookings = async () => {\n    setShowRides(false);\n    setShowBookings(true);\n    setLoadingBookings(true);\n    try {\n      const response = await fetch(\"http://localhost:8080/api/bookings\");\n      if (response.ok) {\n        const data = await response.json();\n        setBookings(data);\n      } else {\n        console.error(\"Fehler beim Laden der Buchungen:\", response.status);\n        setBookings([]);\n      }\n    } catch (error) {\n      console.error(\"Netzwerk-/Client-Fehler beim Laden der Buchungen:\", error);\n      setBookings([]);\n    }\n    setLoadingBookings(false);\n  };\n\n  // Fahrten laden\n  const handleShowRides = async () => {\n    setShowBookings(false);\n    setShowRides(true);\n    setLoadingRides(true);\n    try {\n      const response = await fetch(\"http://localhost:8080/api/rides\");\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Rides geladen:\", data);\n        setRides(data);\n      } else {\n        console.error(\"Fehler beim Laden der Rides:\", response.status);\n        setRides([]);\n      }\n    } catch (error) {\n      console.error(\"Netzwerk-/Client-Fehler beim Laden der Rides:\", error);\n      setRides([]);\n    }\n    setLoadingRides(false);\n  };\n  const handleCreateBooking = async () => {\n    if (!selectedRideId) {\n      alert(\"Bitte wähle eine Fahrt aus.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:8080/api/bookings\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          rideId: parseInt(selectedRideId)\n        }) // Backend erwartet rideId\n      });\n      if (response.ok) {\n        alert(\"Buchung erfolgreich erstellt!\");\n        setSelectedRideId(\"\"); // Reset Auswahl\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        alert(`Fehler ${response.status}: ${errorData.message || \"Buchung fehlgeschlagen.\"}`);\n      }\n    } catch (error) {\n      console.error(\"Netzwerk-/Client-Fehler:\", error);\n      alert(\"Netzwerkproblem oder Server nicht erreichbar.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: \"sans-serif\",\n      background: \"linear-gradient(to bottom, #e0f7fa, #ffffff)\",\n      minHeight: \"100vh\",\n      padding: \"20px\",\n      color: \"#023047\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        color: \"#0077b6\"\n      },\n      children: \"\\uD83D\\uDEA2 FerryBooking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        gap: \"20px\",\n        marginBottom: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShowBookings,\n        style: {\n          backgroundColor: showBookings ? \"#0077b6\" : \"#90e0ef\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"20px\",\n          padding: \"10px 20px\",\n          boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\",\n          cursor: \"pointer\",\n          transition: \"0.3s\"\n        },\n        children: \"\\uD83D\\uDCD6 Meine Buchungen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShowRides,\n        style: {\n          backgroundColor: showRides ? \"#0077b6\" : \"#90e0ef\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"20px\",\n          padding: \"10px 20px\",\n          boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\",\n          cursor: \"pointer\",\n          transition: \"0.3s\"\n        },\n        children: \"\\uD83D\\uDEA4 Fahrt buchen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), showBookings && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#caf0f8\",\n        borderRadius: \"10px\",\n        padding: \"20px\",\n        boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"#0077b6\"\n        },\n        children: \"\\uD83D\\uDCD6 Meine Buchungen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this), loadingBookings ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u23F3 Lade Buchungen...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }, this) : bookings.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u274C Keine Buchungen vorhanden.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: bookings.map(b => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            backgroundColor: \"#ffffff\",\n            borderRadius: \"8px\",\n            padding: \"10px\",\n            margin: \"8px 0\",\n            boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\n          },\n          children: [\"\\uD83D\\uDEF3 \", b.fahrtName, \" am \", b.datum]\n        }, b.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }, this), showRides && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#caf0f8\",\n        borderRadius: \"10px\",\n        padding: \"20px\",\n        boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"#0077b6\"\n        },\n        children: \"\\uD83D\\uDEA4 Verf\\xFCgbare Fahrten\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }, this), loadingRides ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u23F3 Lade Fahrten...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }, this) : rides.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u274C Keine Fahrten verf\\xFCgbar.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedRideId,\n          onChange: e => setSelectedRideId(e.target.value),\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            margin: \"10px 0\",\n            borderRadius: \"8px\",\n            border: \"1px solid #0077b6\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\u2693 Fahrt ausw\\xE4hlen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 33\n          }, this), rides.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: r.id,\n            children: [r.route.originHarbor.name, \" \\u27A1 \", r.route.destinationHarbor.name, \" | \\uD83D\\uDD52 \", r.departureTime, \" \\u2192 \", r.arrivalTime, \" | \\uD83D\\uDEA2 \", r.ship.name]\n          }, r.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateBooking,\n          style: {\n            backgroundColor: \"#0077b6\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: \"20px\",\n            padding: \"10px 20px\",\n            cursor: \"pointer\",\n            transition: \"0.3s\"\n          },\n          children: \"\\u2705 Fahrt buchen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }, this), userRole === \"ADMIN\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#ffe5ec\",\n        borderRadius: \"10px\",\n        padding: \"20px\",\n        boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"#d00000\"\n        },\n        children: \"\\u2699\\uFE0F Neue Fahrt hinzuf\\xFCgen (Admin)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddRide,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: newRide.routeId,\n          onChange: e => setNewRide({\n            ...newRide,\n            routeId: e.target.value\n          }),\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            margin: \"10px 0\",\n            borderRadius: \"8px\",\n            border: \"1px solid #d00000\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\u2693 Route w\\xE4hlen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 29\n          }, this), routes.map(route => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: route.id,\n            children: [route.originHarbor.name, \" \\u27A1 \", route.destinationHarbor.name]\n          }, route.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newRide.shipId,\n          onChange: e => setNewRide({\n            ...newRide,\n            shipId: e.target.value\n          }),\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            margin: \"10px 0\",\n            borderRadius: \"8px\",\n            border: \"1px solid #d00000\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\uD83D\\uDEA2 Schiff w\\xE4hlen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 29\n          }, this), ships.map(ship => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: ship.id,\n            children: ship.name\n          }, ship.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: newRide.departureTime,\n          onChange: e => setNewRide({\n            ...newRide,\n            departureTime: e.target.value\n          }),\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            margin: \"10px 0\",\n            borderRadius: \"8px\",\n            border: \"1px solid #d00000\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: newRide.arrivalTime,\n          onChange: e => setNewRide({\n            ...newRide,\n            arrivalTime: e.target.value\n          }),\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            margin: \"10px 0\",\n            borderRadius: \"8px\",\n            border: \"1px solid #d00000\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            backgroundColor: \"#d00000\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: \"20px\",\n            padding: \"10px 20px\",\n            cursor: \"pointer\",\n            transition: \"0.3s\"\n          },\n          children: \"\\u2795 Hinzuf\\xFCgen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }, this), addSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"green\",\n          marginTop: \"10px\"\n        },\n        children: \"\\u2705 Fahrt erfolgreich hinzugef\\xFCgt!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"QcvLI6YM6o1cpEqCYXO2q5zD74o=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","bookings","setBookings","showBookings","setShowBookings","loadingBookings","setLoadingBookings","rides","setRides","showRides","setShowRides","loadingRides","setLoadingRides","ships","setShips","routes","setRoutes","newRide","setNewRide","routeId","shipId","departureTime","arrivalTime","addSuccess","setAddSuccess","userRole","setUserRole","selectedRideId","setSelectedRideId","role","localStorage","getItem","fetchAllShips","fetchAllRoutes","response","fetch","ok","data","json","console","error","status","log","handleAddRide","e","preventDefault","payload","parseInt","method","headers","body","JSON","stringify","alert","errorData","catch","message","handleShowBookings","handleShowRides","handleCreateBooking","rideId","style","fontFamily","background","minHeight","padding","color","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","marginBottom","onClick","backgroundColor","border","borderRadius","boxShadow","cursor","transition","length","listStyle","map","b","margin","fahrtName","datum","id","value","onChange","target","required","width","r","route","originHarbor","name","destinationHarbor","ship","marginTop","onSubmit","type","_c","$RefreshReg$"],"sources":["D:/SE1/Aufgaben/busapp/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Dashboard() {\r\n    const [bookings, setBookings] = useState([]);\r\n    const [showBookings, setShowBookings] = useState(false);\r\n    const [loadingBookings, setLoadingBookings] = useState(false);\r\n\r\n    const [rides, setRides] = useState([]);\r\n    const [showRides, setShowRides] = useState(false);\r\n    const [loadingRides, setLoadingRides] = useState(false);\r\n\r\n    const [ships, setShips] = useState([]); // 🆕 Liste aller Schiffe\r\n    const [routes, setRoutes] = useState([]); // 🆕 Liste aller Routen\r\n\r\n    const [newRide, setNewRide] = useState({ routeId: \"\", shipId: \"\", departureTime: \"\", arrivalTime: \"\" });\r\n    const [addSuccess, setAddSuccess] = useState(false);\r\n\r\n    const [userRole, setUserRole] = useState(null);\r\n    const [selectedRideId, setSelectedRideId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const role = localStorage.getItem(\"userRole\");\r\n        setUserRole(role); // z. B. ADMIN oder USER\r\n\r\n        // 🆕 Schiffe und Routen beim Laden holen\r\n        fetchAllShips();\r\n        fetchAllRoutes();\r\n    }, []);\r\n\r\n    // 🆕 Alle Schiffe laden\r\n    const fetchAllShips = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/ships\");\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setShips(data);\r\n            } else {\r\n                console.error(\"Fehler beim Laden der Schiffe:\", response.status);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Netzwerk-/Client-Fehler beim Laden der Schiffe:\", error);\r\n        }\r\n    };\r\n\r\n    // 🆕 Alle Routen laden\r\n    const fetchAllRoutes = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/routes\");\r\n\r\n            console.log(\"fetchAllRoutes()\", response); // Debugging\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setRoutes(data);\r\n            } else {\r\n                console.error(\"Fehler beim Laden der Routen:\", response.status);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Netzwerk-/Client-Fehler beim Laden der Routen:\", error);\r\n        }\r\n    };\r\n\r\n    // Fahrt hinzufügen\r\n    const handleAddRide = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const payload = {\r\n            routeId: parseInt(newRide.routeId),\r\n            shipId: parseInt(newRide.shipId),\r\n            departureTime: newRide.departureTime + \":00\", // Sekunden ergänzen\r\n            arrivalTime: newRide.arrivalTime + \":00\",\r\n        };\r\n\r\n        console.log(\"Neuer Ride Payload:\", payload); // 👈 Debuggen\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/rides\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(payload),\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert(\"Fahrt erfolgreich hinzugefügt!\");\r\n                setAddSuccess(true);\r\n                setNewRide({ routeId: \"\", shipId: \"\", departureTime: \"\", arrivalTime: \"\" });\r\n            } else {\r\n                const errorData = await response.json().catch(() => ({}));\r\n                console.error(\"Backend-Fehler:\", response.status, errorData);\r\n                alert(`Fehler ${response.status}: ${errorData.message || \"Fahrt konnte nicht hinzugefügt werden.\"}`);\r\n                setAddSuccess(false);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Netzwerk-/Client-Fehler:\", error);\r\n            alert(\"Netzwerkproblem oder Server nicht erreichbar.\");\r\n            setAddSuccess(false);\r\n        }\r\n    };\r\n\r\n    // Buchungen laden\r\n    const handleShowBookings = async () => {\r\n        setShowRides(false);\r\n        setShowBookings(true);\r\n        setLoadingBookings(true);\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/bookings\");\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setBookings(data);\r\n            } else {\r\n                console.error(\"Fehler beim Laden der Buchungen:\", response.status);\r\n                setBookings([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Netzwerk-/Client-Fehler beim Laden der Buchungen:\", error);\r\n            setBookings([]);\r\n        }\r\n        setLoadingBookings(false);\r\n    };\r\n\r\n    // Fahrten laden\r\n    const handleShowRides = async () => {\r\n        setShowBookings(false);\r\n        setShowRides(true);\r\n        setLoadingRides(true);\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/rides\");\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(\"Rides geladen:\", data);\r\n                setRides(data);\r\n            } else {\r\n                console.error(\"Fehler beim Laden der Rides:\", response.status);\r\n                setRides([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Netzwerk-/Client-Fehler beim Laden der Rides:\", error);\r\n            setRides([]);\r\n        }\r\n        setLoadingRides(false);\r\n    };\r\n\r\n    const handleCreateBooking = async () => {\r\n        if (!selectedRideId) {\r\n            alert(\"Bitte wähle eine Fahrt aus.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/bookings\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ rideId: parseInt(selectedRideId) }), // Backend erwartet rideId\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert(\"Buchung erfolgreich erstellt!\");\r\n                setSelectedRideId(\"\"); // Reset Auswahl\r\n            } else {\r\n                const errorData = await response.json().catch(() => ({}));\r\n                alert(`Fehler ${response.status}: ${errorData.message || \"Buchung fehlgeschlagen.\"}`);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Netzwerk-/Client-Fehler:\", error);\r\n            alert(\"Netzwerkproblem oder Server nicht erreichbar.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                fontFamily: \"sans-serif\",\r\n                background: \"linear-gradient(to bottom, #e0f7fa, #ffffff)\",\r\n                minHeight: \"100vh\",\r\n                padding: \"20px\",\r\n                color: \"#023047\",\r\n            }}\r\n        >\r\n            <h1 style={{ textAlign: \"center\", color: \"#0077b6\" }}>\r\n                🚢 FerryBooking\r\n            </h1>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\", marginBottom: \"30px\" }}>\r\n                <button\r\n                    onClick={handleShowBookings}\r\n                    style={{\r\n                        backgroundColor: showBookings ? \"#0077b6\" : \"#90e0ef\",\r\n                        color: \"#fff\",\r\n                        border: \"none\",\r\n                        borderRadius: \"20px\",\r\n                        padding: \"10px 20px\",\r\n                        boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\",\r\n                        cursor: \"pointer\",\r\n                        transition: \"0.3s\",\r\n                    }}\r\n                >\r\n                    📖 Meine Buchungen\r\n                </button>\r\n                <button\r\n                    onClick={handleShowRides}\r\n                    style={{\r\n                        backgroundColor: showRides ? \"#0077b6\" : \"#90e0ef\",\r\n                        color: \"#fff\",\r\n                        border: \"none\",\r\n                        borderRadius: \"20px\",\r\n                        padding: \"10px 20px\",\r\n                        boxShadow: \"0 4px 6px rgba(0,0,0,0.1)\",\r\n                        cursor: \"pointer\",\r\n                        transition: \"0.3s\",\r\n                    }}\r\n                >\r\n                    🚤 Fahrt buchen\r\n                </button>\r\n            </div>\r\n\r\n            {showBookings && (\r\n                <div\r\n                    style={{\r\n                        backgroundColor: \"#caf0f8\",\r\n                        borderRadius: \"10px\",\r\n                        padding: \"20px\",\r\n                        boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                        marginBottom: \"20px\",\r\n                    }}\r\n                >\r\n                    <h3 style={{ color: \"#0077b6\" }}>📖 Meine Buchungen</h3>\r\n                    {loadingBookings ? (\r\n                        <div>⏳ Lade Buchungen...</div>\r\n                    ) : bookings.length === 0 ? (\r\n                        <div>❌ Keine Buchungen vorhanden.</div>\r\n                    ) : (\r\n                        <ul style={{ listStyle: \"none\", padding: 0 }}>\r\n                            {bookings.map(b => (\r\n                                <li\r\n                                    key={b.id}\r\n                                    style={{\r\n                                        backgroundColor: \"#ffffff\",\r\n                                        borderRadius: \"8px\",\r\n                                        padding: \"10px\",\r\n                                        margin: \"8px 0\",\r\n                                        boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\r\n                                    }}\r\n                                >\r\n                                    🛳 {b.fahrtName} am {b.datum}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {showRides && (\r\n                <div\r\n                    style={{\r\n                        backgroundColor: \"#caf0f8\",\r\n                        borderRadius: \"10px\",\r\n                        padding: \"20px\",\r\n                        boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                    }}\r\n                >\r\n                    <h3 style={{ color: \"#0077b6\" }}>🚤 Verfügbare Fahrten</h3>\r\n                    {loadingRides ? (\r\n                        <div>⏳ Lade Fahrten...</div>\r\n                    ) : rides.length === 0 ? (\r\n                        <div>❌ Keine Fahrten verfügbar.</div>\r\n                    ) : (\r\n                        <>\r\n                            <select\r\n                                value={selectedRideId}\r\n                                onChange={e => setSelectedRideId(e.target.value)}\r\n                                required\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    padding: \"10px\",\r\n                                    margin: \"10px 0\",\r\n                                    borderRadius: \"8px\",\r\n                                    border: \"1px solid #0077b6\",\r\n                                }}\r\n                            >\r\n                                <option value=\"\">⚓ Fahrt auswählen</option>\r\n                                {rides.map(r => (\r\n                                    <option key={r.id} value={r.id}>\r\n                                        {r.route.originHarbor.name} ➡ {r.route.destinationHarbor.name} | 🕒 {r.departureTime} → {r.arrivalTime} | 🚢 {r.ship.name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            <button\r\n                                onClick={handleCreateBooking}\r\n                                style={{\r\n                                    backgroundColor: \"#0077b6\",\r\n                                    color: \"#fff\",\r\n                                    border: \"none\",\r\n                                    borderRadius: \"20px\",\r\n                                    padding: \"10px 20px\",\r\n                                    cursor: \"pointer\",\r\n                                    transition: \"0.3s\",\r\n                                }}\r\n                            >\r\n                                ✅ Fahrt buchen\r\n                            </button>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {userRole === \"ADMIN\" && (\r\n                <div\r\n                    style={{\r\n                        backgroundColor: \"#ffe5ec\",\r\n                        borderRadius: \"10px\",\r\n                        padding: \"20px\",\r\n                        boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                        marginTop: \"30px\",\r\n                    }}\r\n                >\r\n                    <h3 style={{ color: \"#d00000\" }}>⚙️ Neue Fahrt hinzufügen (Admin)</h3>\r\n                    <form onSubmit={handleAddRide}>\r\n                        <select\r\n                            value={newRide.routeId}\r\n                            onChange={e => setNewRide({ ...newRide, routeId: e.target.value })}\r\n                            required\r\n                            style={{\r\n                                width: \"100%\",\r\n                                padding: \"10px\",\r\n                                margin: \"10px 0\",\r\n                                borderRadius: \"8px\",\r\n                                border: \"1px solid #d00000\",\r\n                            }}\r\n                        >\r\n                            <option value=\"\">⚓ Route wählen</option>\r\n                            {routes.map(route => (\r\n                                <option key={route.id} value={route.id}>\r\n                                    {route.originHarbor.name} ➡ {route.destinationHarbor.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n                        <select\r\n                            value={newRide.shipId}\r\n                            onChange={e => setNewRide({ ...newRide, shipId: e.target.value })}\r\n                            required\r\n                            style={{\r\n                                width: \"100%\",\r\n                                padding: \"10px\",\r\n                                margin: \"10px 0\",\r\n                                borderRadius: \"8px\",\r\n                                border: \"1px solid #d00000\",\r\n                            }}\r\n                        >\r\n                            <option value=\"\">🚢 Schiff wählen</option>\r\n                            {ships.map(ship => (\r\n                                <option key={ship.id} value={ship.id}>\r\n                                    {ship.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n                        <input\r\n                            type=\"datetime-local\"\r\n                            value={newRide.departureTime}\r\n                            onChange={e => setNewRide({ ...newRide, departureTime: e.target.value })}\r\n                            required\r\n                            style={{\r\n                                width: \"100%\",\r\n                                padding: \"10px\",\r\n                                margin: \"10px 0\",\r\n                                borderRadius: \"8px\",\r\n                                border: \"1px solid #d00000\",\r\n                            }}\r\n                        />\r\n\r\n                        <input\r\n                            type=\"datetime-local\"\r\n                            value={newRide.arrivalTime}\r\n                            onChange={e => setNewRide({ ...newRide, arrivalTime: e.target.value })}\r\n                            required\r\n                            style={{\r\n                                width: \"100%\",\r\n                                padding: \"10px\",\r\n                                margin: \"10px 0\",\r\n                                borderRadius: \"8px\",\r\n                                border: \"1px solid #d00000\",\r\n                            }}\r\n                        />\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            style={{\r\n                                backgroundColor: \"#d00000\",\r\n                                color: \"#fff\",\r\n                                border: \"none\",\r\n                                borderRadius: \"20px\",\r\n                                padding: \"10px 20px\",\r\n                                cursor: \"pointer\",\r\n                                transition: \"0.3s\",\r\n                            }}\r\n                        >\r\n                            ➕ Hinzufügen\r\n                        </button>\r\n                    </form>\r\n                    {addSuccess && (\r\n                        <div style={{ color: \"green\", marginTop: \"10px\" }}>\r\n                            ✅ Fahrt erfolgreich hinzugefügt!\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}